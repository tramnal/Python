from abc import ABC, abstractmethod


class Progression(ABC):
    def __init__(self, first, step):
        self._first, self._step = first, step

    def __iter__(self):
        return self

    @abstractmethod
    def __next__(self):
        pass


class ArithmeticProgression(Progression):
    def __next__(self):
        elem = self._first
        self._first += self._step
        return elem


class GeometricProgression(Progression):
    def __next__(self):
        elem = self._first
        self._first *= self._step
        return elem
